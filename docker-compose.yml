services:
  postgres:
    image: postgres:15-alpine
    container_name: contrap_postgres
    environment:
      POSTGRES_DB: contrap
      POSTGRES_USER: contrap_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-contrap_dev_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U contrap_user -d contrap"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - contrap_network

  redis:
    image: redis:7-alpine
    container_name: contrap_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - contrap_network

  etl:
    build: ./services/etl
    container_name: contrap_etl
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: contrap
      DB_USER: contrap_user
      DB_PASSWORD: ${DB_PASSWORD:-contrap_dev_password}
      API_BASE_URL: https://www.base.gov.pt/APIBase2
      API_ACCESS_TOKEN: Nmq28lKgTbr05RaFOJNf
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./services/etl/data:/app/data
      - ./services/etl/logs:/app/logs
      - ./services/etl/src:/app/src:ro
      - ./services/etl/migrations:/app/migrations:ro
      - ./services/etl/run_etl.py:/app/run_etl.py:ro
      - ./services/etl/scheduler.py:/app/scheduler.py:ro
      - ./services/etl/migrate.py:/app/migrate.py:ro
      - ./services/etl/alembic.ini:/app/alembic.ini:ro
      - ./database/schema_en.sql:/app/database/schema_en.sql:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - contrap_network
    profiles:
      - etl

  backend:
    build: ./services/backend
    container_name: contrap_backend
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://contrap_user:${DB_PASSWORD:-contrap_dev_password}@postgres:5432/contrap
      REDIS_URL: redis://redis:6379
      PORT: 4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - contrap_network
    profiles:
      - backend

  frontend:
    build: ./services/frontend
    container_name: contrap_frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: http://backend:4000
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: http://backend:4000/graphql
      HOSTNAME: 0.0.0.0
      PORT: 3000
    depends_on:
      - backend
    networks:
      - contrap_network
    profiles:
      - frontend

volumes:
  postgres_data:
  redis_data:

networks:
  contrap_network:
    driver: bridge
